-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.address
(
    "Country" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "City" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Street" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Appartment" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Postal_Code" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "ID_ADDRESS" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    CONSTRAINT address_pkey PRIMARY KEY ("ID_ADDRESS")
);

CREATE TABLE IF NOT EXISTS public.category
(
    "Name" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Description" character varying(500) COLLATE pg_catalog."default",
    "ID_CATEGORY" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    CONSTRAINT category_pkey PRIMARY KEY ("ID_CATEGORY")
);

CREATE TABLE IF NOT EXISTS public.colors
(
    "ID_COLOR" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(255)[] COLLATE pg_catalog."default" NOT NULL,
    color_hex character(6)[] COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT colors_pkey PRIMARY KEY ("ID_COLOR")
);

CREATE TABLE IF NOT EXISTS public.delivery
(
    "ID_DELIVERY" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    company_name character varying(255)[] COLLATE pg_catalog."default" NOT NULL,
    type character varying(255)[] COLLATE pg_catalog."default" NOT NULL,
    price numeric(10, 2) NOT NULL,
    CONSTRAINT delivery_pkey PRIMARY KEY ("ID_DELIVERY")
);

CREATE TABLE IF NOT EXISTS public.galery
(
    "ID_GALERY" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    photo_1 character varying(255)[] COLLATE pg_catalog."default" NOT NULL,
    photo_2 character varying(255)[] COLLATE pg_catalog."default",
    photo_3 character varying(255)[] COLLATE pg_catalog."default",
    photo_4 character varying(255)[] COLLATE pg_catalog."default",
    "ID_PRODUCT" integer NOT NULL,
    CONSTRAINT galery_pkey PRIMARY KEY ("ID_GALERY")
);

CREATE TABLE IF NOT EXISTS public.payment
(
    "ID_PAYMENT" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    type character varying(255)[] COLLATE pg_catalog."default" NOT NULL,
    description character varying(255)[] COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT payment_pkey PRIMARY KEY ("ID_PAYMENT")
);

CREATE TABLE IF NOT EXISTS public.producer
(
    "Name" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "ID_PRODUCER" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Description" character varying(500) COLLATE pg_catalog."default",
    "ID_ADDRESS" integer NOT NULL,
    CONSTRAINT producer_pkey PRIMARY KEY ("ID_PRODUCER")
);

CREATE TABLE IF NOT EXISTS public.product
(
    "Name" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Price" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Description" character varying(510) COLLATE pg_catalog."default",
    "ID_PRODUCT" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Status" status_enum NOT NULL,
    "ID_PRODUCER" integer NOT NULL,
    "ID_CATEGORY" integer,
    "ID_USER" integer NOT NULL,
    "ID_GALERY" integer NOT NULL,
    "ID_COLOR" integer,
    CONSTRAINT product_pkey PRIMARY KEY ("ID_PRODUCT")
);

CREATE TABLE IF NOT EXISTS public.transaction
(
    "Date" date NOT NULL,
    "ID_TRANSACTION" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "ID_SELLER" integer NOT NULL,
    "ID_BUYER" integer NOT NULL,
    "ID_PRODUCT" integer NOT NULL,
    "ID_DELIVERY" integer NOT NULL,
    "ID_PAYMENT" integer NOT NULL,
    CONSTRAINT transaction_pkey PRIMARY KEY ("ID_TRANSACTION")
);

CREATE TABLE IF NOT EXISTS public."user"
(
    "Name" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Surname" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Email" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Nickname" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "Password" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "ID_USER" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Gender" gender_enum,
    "ID_ADDRESS" integer,
    CONSTRAINT user_pkey PRIMARY KEY ("ID_USER")
);

ALTER TABLE IF EXISTS public.galery
    ADD CONSTRAINT "FK_PRODUCT" FOREIGN KEY ("ID_PRODUCT")
    REFERENCES public.product ("ID_PRODUCT") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.producer
    ADD CONSTRAINT "FK_ADDRESS" FOREIGN KEY ("ID_ADDRESS")
    REFERENCES public.address ("ID_ADDRESS") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT "FK_CATEGORY" FOREIGN KEY ("ID_CATEGORY")
    REFERENCES public.category ("ID_CATEGORY") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT "FK_COLOR" FOREIGN KEY ("ID_COLOR")
    REFERENCES public.colors ("ID_COLOR") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT "FK_PRODUCER" FOREIGN KEY ("ID_PRODUCER")
    REFERENCES public.producer ("ID_PRODUCER") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT "FK_USER" FOREIGN KEY ("ID_USER")
    REFERENCES public."user" ("ID_USER") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transaction
    ADD CONSTRAINT "FK_BUYER" FOREIGN KEY ("ID_BUYER")
    REFERENCES public."user" ("ID_USER") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transaction
    ADD CONSTRAINT "FK_DELIVERY" FOREIGN KEY ("ID_DELIVERY")
    REFERENCES public.delivery ("ID_DELIVERY") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transaction
    ADD CONSTRAINT "FK_PAYMENT" FOREIGN KEY ("ID_PAYMENT")
    REFERENCES public.payment ("ID_PAYMENT") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transaction
    ADD CONSTRAINT "FK_PRODUCT" FOREIGN KEY ("ID_PRODUCT")
    REFERENCES public.product ("ID_PRODUCT") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transaction
    ADD CONSTRAINT "FK_SELLER" FOREIGN KEY ("ID_SELLER")
    REFERENCES public."user" ("ID_USER") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."user"
    ADD CONSTRAINT "FK_ADDRESS" FOREIGN KEY ("ID_ADDRESS")
    REFERENCES public.address ("ID_ADDRESS") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;